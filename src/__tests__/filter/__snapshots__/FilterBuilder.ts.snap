// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`aol.filter filterBuilder empty  1`] = `"INCLUDE"`;

exports[`aol.filter filterBuilder multiple cql equal complex 1`] = `"(((foo = 1) && (Concatenate(bar) = 'bar')) || (Concatenate(bar3) = 'bar3'))"`;

exports[`aol.filter filterBuilder multiple cql equal number AND string 1`] = `"((foo = 1) && (Concatenate(bar) = 'bar'))"`;

exports[`aol.filter predicate equal cql boolean 1`] = `"(foo = true)"`;

exports[`aol.filter predicate equal cql not.boolean 1`] = `"(foo <> true)"`;

exports[`aol.filter predicate equal cql not.number 1`] = `"(foo <> 1)"`;

exports[`aol.filter predicate equal cql not.string 1`] = `"(Concatenate(foo) <> '1')"`;

exports[`aol.filter predicate equal cql number 1`] = `"(foo = 1)"`;

exports[`aol.filter predicate equal cql string 1`] = `"(Concatenate(foo) = '1')"`;

exports[`aol.filter predicate equal sql boolean 1`] = `"(foo = true)"`;

exports[`aol.filter predicate equal sql not.boolean 1`] = `"(foo <> true)"`;

exports[`aol.filter predicate equal sql not.number 1`] = `"(foo <> 1)"`;

exports[`aol.filter predicate equal sql not.string 1`] = `"(foo <> '1')"`;

exports[`aol.filter predicate equal sql number 1`] = `"(foo = 1)"`;

exports[`aol.filter predicate equal sql string 1`] = `"(foo = '1')"`;

exports[`aol.filter predicate greaterOrEqualThan sql number 1`] = `"(foo >= 1)"`;

exports[`aol.filter predicate greaterOrEqualThan sql string 1`] = `"(foo >= '1')"`;

exports[`aol.filter predicate greaterThan sql number 1`] = `"(foo > 1)"`;

exports[`aol.filter predicate greaterThan sql string 1`] = `"(foo > '1')"`;

exports[`aol.filter predicate ilike cql not.string 1`] = `"(Concatenate(foo) NOT ILIKE '%bar%')"`;

exports[`aol.filter predicate ilike cql string 1`] = `"(Concatenate(foo) ILIKE '%bar%')"`;

exports[`aol.filter predicate ilike sql not.string 1`] = `"(UPPER(foo) NOT LIKE '%BAR%')"`;

exports[`aol.filter predicate ilike sql string 1`] = `"(UPPER(foo) LIKE '%BAR%')"`;

exports[`aol.filter predicate in cql not.number 1`] = `"(foo NOT IN (1,2,3))"`;

exports[`aol.filter predicate in cql not.string 1`] = `"(foo NOT IN ('bar1','bar2','bar3'))"`;

exports[`aol.filter predicate in cql number 1`] = `"(foo IN (1,2,3))"`;

exports[`aol.filter predicate in cql string 1`] = `"(foo IN ('bar1','bar2','bar3'))"`;

exports[`aol.filter predicate in sql not.number 1`] = `"(foo NOT IN (1,2,3))"`;

exports[`aol.filter predicate in sql not.string 1`] = `"(foo NOT IN ('bar1','bar2','bar3'))"`;

exports[`aol.filter predicate in sql number 1`] = `"(foo IN (1,2,3))"`;

exports[`aol.filter predicate in sql string 1`] = `"(foo IN ('bar1','bar2','bar3'))"`;

exports[`aol.filter predicate like cql not.string 1`] = `"(Concatenate(foo) NOT LIKE '%bar%')"`;

exports[`aol.filter predicate like cql string 1`] = `"(Concatenate(foo) LIKE '%bar%')"`;

exports[`aol.filter predicate like sql not.string 1`] = `"(foo NOT LIKE '%bar%')"`;

exports[`aol.filter predicate like sql string 1`] = `"(foo LIKE '%bar%')"`;

exports[`aol.filter predicate lowerOrEqualThan sql number 1`] = `"(foo <= 1)"`;

exports[`aol.filter predicate lowerOrEqualThan sql string 1`] = `"(foo <= '1')"`;

exports[`aol.filter predicate lowerThan sql number 1`] = `"(foo < 1)"`;

exports[`aol.filter predicate lowerThan sql string 1`] = `"(foo < '1')"`;
